export declare enum EnvMode {
    LIVE = "LIVE",
    SANDBOX = "SANDBOX"
}
export declare enum TRANSACTION_STATUS {
    PENDING = "PENDING",
    SUCCESS = "SUCCESS",
    FAILED = "FAILED",
    INIT = "INIT"
}
export declare enum PaymentMethod {
    momo = "momo",
    card = "card",
    direct_debit = "direct_debit"
}
export declare enum PaymentProcess {
    code_pin = "code_pin",
    user_information = "user_information",
    need_user_pin = "need_user_pin",
    need_otp_verification = "need_otp_verification",
    need_billing_details = "need_billing_details"
}
export interface Action {
    failure?: () => void;
    success?: () => void;
}
export interface IRessources {
    amount: number;
    key: string;
    host: string;
    providers?: string[];
    paymentMethods?: string[];
    theme?: string;
    position?: string;
    sandbox?: boolean;
    fullname?: string;
    email?: string;
    phoneNumber?: string;
    url?: string;
    sdk?: string;
    reason?: string;
    callback?: string;
    data?: string | Record<string, any>;
    partnerId?: string;
    serviceId: string;
    defaultCountry?: string;
    countries?: string[];
    poste?: boolean;
    e_services?: boolean;
    donation?: boolean;
}
export interface IMomoForm {
    amount: number;
    email: string;
    country: string;
    firstname?: string;
    lastname?: string;
    phoneNumber?: string;
    name?: string;
    contact?: string;
    channel?: string;
    success_url?: string;
    error_url?: string;
    reason?: string;
    stateData?: string;
    partnerId?: string;
    direct?: string;
    split?: string;
    sdk?: string;
}
export interface ICardForm {
    amount: number;
    fullname: string;
    email: string;
    token: string;
    step: number;
    reason: string;
    transactionId: string;
    suggested_auth: string;
    cardId?: string;
    expDate?: string;
    cvc?: string;
    bank?: string;
    pin?: string;
    otp?: string;
    message?: string;
    direct?: string;
    partnerId?: string;
    stateData?: string;
}
export interface IWaveForm {
    amount: number;
    name: string;
    email: string;
    channel: string;
    success_url: string;
    error_url: string;
    data?: string;
    partnerId?: string;
}
export interface IDirectDebitForm {
    fullname: string;
    email: string;
    pin: string;
    provider: string;
    account: string;
}
export interface LifecycleInterface {
    ressources: IRessources | null;
    initWidget: (data: IRessources, cb: (data: IRessources) => void) => void;
    destroyWidget: () => void;
    closeWidget: () => void;
    initPayment: () => void;
    waitingUserFeedback: () => void;
    onPaymentAborted: () => void;
    onUserFeedback: (paymentResponse: any, whatToDo?: Action) => void;
    endPayment: (url?: string) => void;
    onAfterFailure: (retryTransaction: boolean) => void;
}
//# sourceMappingURL=lib.d.ts.map